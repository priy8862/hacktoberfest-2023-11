Given an array A[] of N integers and an integer M. The task is to count the number of subarrays which have median M.
Median of an array is defined as below:

1. If N is odd, the median value is the number that is in the middle after sorting the array.
2. if N is even, the median value is the left of the two middle numbers after sorting the array. 

Example 1:

Input:
N = 5, M = 2
A[] = {2, 1, 3, 5, 4}
Output: 
3
Explanation: 
The subarrays which has median equal to M
are [2], [2,1,3] and [2,1,3,5]

Example 2:

Input:
N = 1, M = 1
A[] = {1}
Output: 
1
Explanation: 
The subarrays which has median equal to M
is [1].




def countSubarraysWithMedian(A, N, M):
    count = 0
    for i in range(N):
        left, right = i, i
        while right < N:
            if A[right] == M:
                count += 1
            right += 1
            if right < N:
                left_median = sorted(A[left:right + 1])[(right - left) // 2]
                if left_median == M:
                    count += 1
            left += 1
    return count

# Example 1
N1 = 5
M1 = 2
A1 = [2, 1, 3, 5, 4]
output1 = countSubarraysWithMedian(A1, N1, M1)
print(output1)  # Output: 3

# Example 2
N2 = 1
M2 = 1
A2 = [1]
output2 = countSubarraysWithMedian(A2, N2, M2)
print(output2)  # Output: 1
